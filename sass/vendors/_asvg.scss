//
// Vendors -> Svg
// ------------------------------------

//svg sprites
$sprite:   map-get($icons, sprite) !default;
/// Convert pixels to ems
/// @param {Number} $px - value to convert
/// @requires $mq-base-font-size
/// @returns {Number}
@function mq-px2em($px, $base-font-size: $base-font-size) {
  @if unitless($px) {
    @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
    @return mq-px2em($px + 0px); // That may fail.
  } @else if unit($px) == em {
    @return $px;
  }
  @return ($px / $base-font-size) * 1em;
}

/// Set the `$sprite` map
/// @group sprite

/// Retrive an attributes value for a specific icon in the sprite map
/// @param {string} $icon - The name of the icon
/// @param {string} $attr - The attribute you wish to retrieve (e.g. width)
@function sprite-attr($icon, $attr) {
  $newIcon: map-get($icons, $icon);
  @if $newIcon == null {
    @warn "Can't find an icon with the name #{$icon}";
  }
  @return map-get($newIcon, $attr);
}

/// Create a map with the specified icon of attributes
/// @param {string} $icon - The name of the icon
@function icon-attr($icon) {
  $attr: (
          width: sprite-attr($icon, width),
          height: sprite-attr($icon, height),
          x: sprite-attr($icon, backgroundX),
          y: sprite-attr($icon, backgroundY)
  );

  @return $attr;
}

/// Assign the correct SVG background image and dimensions to the element
%sprite {
  background-image: url(map-get($sprite, svgPath));
  background-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));
}

@mixin sprite($icon, $type: all) {
  @if $type == all {
    // Shares the backgrounds
    @extend %sprite;
  }

  $iconMap: icon-attr($icon);

  // Outputs dimensions in em
  @if $type == all or $type == size {
    width: mq-px2em(map-get($iconMap, width) + 1);
    height: mq-px2em(map-get($iconMap, height) + 1);
  }

  // Outputs background position in em
  @if $type == all or $type == bg {
    // numbers must be the same as shape -> spacing -> padding in the gulp/tasks/svg.js
    background-position: mq-px2em(map-get($iconMap, x) - 10) mq-px2em(map-get($iconMap, y) - 10);
  }

}
